version: 2

references:
  restore_bundle: &restore_bundle
    restore_cache:
      keys:
        - bundle-dependencies-{{ checksum "Gemfile.lock" }}
        - bundle-dependencies-

  restore_yarn: &restore_yarn
    restore_cache:
      keys:
        - yarn-dependencies-{{ checksum "yarn.lock" }}
        - yarn-dependencies-

  install_bundle_dependencies: &install_bundle_dependencies
    run:
      name: Install bundle dependencies
      command: |
        BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")
        gem install bundler:$BUNDLER_VERSION
        bundle _$(echo $BUNDLER_VERSION)_ install

  save_bundle_cache: &save_bundle_cache
    save_cache:
      key: bundle-dependencies-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle

  install_yarn_dependencies: &install_yarn_dependencies
    run:
      name: Install node and yarn
      command: |
        curl -sL https://deb.nodesource.com/setup_$(cat .node-version).x | sudo -E bash -
        sudo apt-get install -y nodejs
        curl -o- -L https://yarnpkg.com/install.sh | bash
        sudo ln -s $HOME/.yarn/bin/yarn /usr/local/bin/yarn
        yarn install --frozen-lockfile

  save_yarn_cache: &save_yarn_cache
    save_cache:
      key: yarn-dependencies-{{ checksum "yarn.lock" }}
      paths:
        - node_modules

jobs:
  test:
    docker:
      - image: circleci/ruby:2.7
        environment:
          RAILS_ENV: test
          BUNDLE_JOBS: 4
          BUNDLE_PATH: vendor/bundle
      - image: postgres:11.3

    steps:
      - checkout
      - *restore_bundle
      - *restore_yarn
      - *install_bundle_dependencies
      - *save_bundle_cache
      - *install_yarn_dependencies
      - *save_yarn_cache

      - run:
          name: Wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Setup database
          command: bundle exec rails db:create db:schema:load

      - run:
          name: Run rspec
          command: |
            RSPEC_JUNIT_ARGS="-r rspec_junit_formatter -f RspecJunitFormatter -o test_results/rspec.xml"
            RSPEC_FORMAT_ARGS="-f progress --no-color -p 10"
            bundle exec rspec spec $RSPEC_FORMAT_ARGS $RSPEC_JUNIT_ARGS

      - store_test_results:
          path: test_results

  lint:
    docker:
      - image: circleci/ruby:2.7
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_PATH: vendor/bundle

    steps:
      - checkout
      - *restore_bundle
      - *restore_yarn
      - *install_bundle_dependencies
      - *save_bundle_cache
      - *install_yarn_dependencies
      - *save_yarn_cache

      - run:
          name: Install reviewdog
          command: |
            curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b ./bin

      - run:
          name: Get files to lint
          command: git diff origin/master --name-only --diff-filter=d > tmp/files_to_lint

      - run:
          name: Run rubocop
          shell: /bin/bash
          command: |
            cat tmp/files_to_lint | grep -E '.+\.(rb)$' | xargs bundle exec rubocop --force-exclusion \
            | ./bin/reviewdog -reporter=github-pr-review -f=rubocop

      - run:
          name: Run eslint
          shell: /bin/bash
          command: |
            cat tmp/files_to_lint | grep -E '.+\.(js|jsx|vue)$' | xargs yarn run eslint \
            | ./bin/reviewdog -reporter=github-pr-review -f=eslint

      - run:
          name: Run stylelint
          shell: /bin/bash
          command: |
            cat tmp/files_to_lint | grep -E '.+\.(scss|css|less)$' | xargs yarn run stylelint \
            | ./bin/reviewdog -reporter=github-pr-review -f=stylelint

workflows:
  version: 2
  test_and_lint:
    jobs:
      - test
      - lint:
          context: org-global
